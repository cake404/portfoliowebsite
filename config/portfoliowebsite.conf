upstream test_server {
  server unix:/var/www/mysite/run/gunicorn.sock fail_timeout=10s;
}

# This is not neccessary - it's just commonly used
# it just redirects example.com -> www.example.com
# so it isn't treated as two separate websites
server {
        listen 80;
        server_name jacobstruckmeyer.com;
        return 301 $scheme://www.jacobstruckmeyer.com$request_uri;
}

server {
    server_name www.jacobstruckmeyer.com;

    client_max_body_size 4G;

    location /static/ {
        autoindex on;
        alias   /var/www/mysite/portfoliowebsite/static/;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        if (!-f $request_filename) {
            proxy_pass http://test_server;
            break;
        }
    }

    #For favicon
    location  /favicon.ico {
        alias /var/www/mysite/portfoliowebsite/static/img/favicon.ico;
    }
    #For robots.txt
    location  /robots.txt {
        alias /var/www/mysite/portfoliowebsite/static/robots.txt ;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.jacobstruckmeyer.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.jacobstruckmeyer.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = www.jacobstruckmeyer.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen   80;
    server_name www.jacobstruckmeyer.com;
    return 404; # managed by Certbot


}